Beauty Bar
------------------------

Project to make bars look nicer.

TODOs
------------------------

<host> = beauty-bar.appspot.com

Control generators (PRIO 2)
--------
(done some, needs improvement though)
Make generators controllable through UI.
+ change background image
  + color
  + image (clipart vs. upload)
+ preload generator parts

Write architecture design (PRIO 2)
--------
+ structure of model/view/controller
+ services (svg-to-png, live-data-import, image-store)
+ generator interface
+ database interface
+ database tools for gae
+ hooks for information collection
  - use meter
+ logging?
+ naming conventions / file system
+ use staticmethods? or only classmethods

Tools to process SVG (PRIO 3)
--------
+ extract bars from svg
+ make generator skel based on svg image?
+ mofify svg size?
+ find more tools?! Inkscape is good, but more?

Change to use JQuery library (PRIO 1)
--------
Design look-and-feel.

Store images to db (PRIO 5 - POSTPONED)
--------
  + svg to png conversion
   --> tried twice, do not support python tools to make it,
       and Batik (Java) cannot be used as it uses java.awt.
  + make images accessible later on
    (http://<host>/s/<image_name>(.svg|.png)
  + use memcache 

Testing (PRIO 4)
--------
+ test with other browsers
 + opera
 + internet explorer
+ test with many users
+ write test plan
+ write some automate tests to verify that atleast something works
  before upload

Bug fixing (PRIO 3)
--------
+ DB (?) bug: sometimes all generators go active:false
  - this must be caused by many process using same data
    and style paraller. It should be prevented with locks
    + how to implement multiuser system?
    + how about one user (aka. session) with many tabs (or windows)?
+ DB bug, data is not saved with session!!!
+ save should be implemented other way... we should continue modifying
  "session name" image after save and it should remain as it was,
  and also with load

Different size datasets (PRIO 3)
--------
+ from 2 to 10 bars and can be vary with bar type,
  but needs to be shown in page
+ another dimension

Database improvements (PRIO 4)
--------
+ make database separate tables for saved data, session data, and
  deleted data - or atleast make db attribute for them.

User documentation (PRIO 5)
--------
+ tutorials / docs
  + training video to Youtube (PRIO 4)
+ invent more user scenarios
+ make nice examples

Make more generators (PRIO 3)
--------
+ make default templates for common blogging schemas
+ weather diagram
+ improve current diagrams

Live data sources (PRIO 5)
--------
data sources directly from common sources (e.g. UN free data + stat.fi)
few nice and common examples population development through time
+ do we need separate "data-conversion service for this?"

Others (PRIO 5)
--------
+ add custom 404 (page missing) and 500 (server error) pages

+ add message db field to session, which is shown when user views
  page next time and can be used to send error messages and infos

+ Database tool to backup database & restore database
  + does google have one already?

+ add statistical (edited) and history (versions) to database (PRIO 4)

+ implement user accounts
 + add user accounting in database

+ check against python coding guidelines: (PRIO 1)
  http://google-styleguide.googlecode.com/svn/trunk/pyguide.html

+ fix pages to XHTML compliant (PRIO 2)

+ platform stuff
  + integration to google docs
  + save data with google account

+ logic
  + calculate statistics (PRIO 4)
  + calculate how much processing power is used (PRIO 6 - OPTIMIZATION)
  + export images as service

+ business plan (PRIO 5)

+ make chart-api caching
  - if same request comes again it should read result from cache

+ internalionalization (PRIO 2)
  + finnish and english
  + flags in top corner?

Required skills
------------------------
  + marketing   - to get users
  + statistics  - to help to modify data
  + data mining - to create "default" graph pictures
  + graphical   - to make bars nicer & page nicer
  + programming - to code more flexible architecture

Dependencies
------------------------

Prototype.js
SVGWeb
SVGFig
Google App Engine / Python
(Inkscape)

Run
------------------------

cd ..
python2.5 ./app-engine/dev_appserver.py beautybar/

